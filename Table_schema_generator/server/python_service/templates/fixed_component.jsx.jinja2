import React, { useState, useEffect } from 'react';
import {
  Box,
  Button,
  Paper,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Typography,
  TextField,
  Dialog,
  DialogActions,
  DialogContent,
  DialogTitle,
  Grid
} from '@mui/material';

/**
 * {{ component_name }} - Component for {{ table_name }}
 */
const {{ component_name }} = () => {
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(false);

  const [open, setOpen] = useState(false);
  const [formData, setFormData] = useState({
    {% for field in all_fields %}
    {{ field.name }}: null{% if not loop.last %},{% endif %}
    {% endfor %}
  });

  useEffect(() => {
    const mockData = [];
    for (let i = 1; i <= 5; i++) {
      mockData.push({
        {% for field in all_fields %}
        {{ field.name }}: generateMockValue('{{ field.type }}', '{{ field.name }}', i){% if not loop.last %},{% endif %}
        {% endfor %}
      });
    }
    setData(mockData);
  }, []);

  const generateMockValue = (type, name, index) => {
    if (name === '{{ primary_key }}') {
      return index;
    } else if (name.includes('name')) {
      return `Sample ${name} ${index}`;
    } else if (type.includes('INT')) {
      return index * 10;
    } else if (type.includes('DATE')) {
      return new Date().toISOString();
    } else {
      return `Sample ${name} ${index}`;
    }
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = () => {
    setData(prev => [...prev, formData]);
    handleClose();
  };

  const handleOpen = () => {
    setOpen(true);
  };

  const handleClose = () => {
    setOpen(false);
    setFormData({
      {% for field in all_fields %}
      {{ field.name }}: null{% if not loop.last %},{% endif %}
      {% endfor %}
    });
  };

  return (
    {% raw %}
    <Box sx={% raw %}{{ width: '100%' }}{% endraw %}>
      <Paper elevation={3} sx={% raw %}{{ width: '100%', mb: 2, p: 2 }}{% endraw %}>
        <Box sx={% raw %}{{ display: 'flex', justifyContent: 'space-between', mb: 2 }}{% endraw %}>
          <Typography variant="h6" component="div">
    {% endraw %}
            {{ page_title }}
    {% raw %}
          </Typography>
          <Button variant="contained" onClick={% raw %}{handleOpen}{% endraw %}>
            Add New
          </Button>
        </Box>

        <TableContainer>
          <Table>
            <TableHead>
              <TableRow>
    {% endraw %}
                {% for field in fields %}
    {% raw %}
                <TableCell>
    {% endraw %}
                  {{ field.name | replace('_', ' ') | title }}
    {% raw %}
                </TableCell>
                {% endfor %}
              </TableRow>
            </TableHead>
            <TableBody>
              {% raw %}{data.map((row) => (
    {% endraw %}
                <TableRow key={row.{% endraw %}{{ primary_key }} {% raw %}>
                  {% endraw %}{% for field in fields %}
    {% raw %}
                  <TableCell>{% raw %}{String(row.
    {% endraw %}{% endraw %}{{ field.name }}{% raw %}{% raw %})}{% endraw %}</TableCell>
                  {% endfor %}{% raw %}
                </TableRow>
              ))}{% endraw %}
            </TableBody>
          </Table>
        </TableContainer>
      </Paper>

      <Dialog open={% raw %}{open}{% endraw %} onClose={% raw %}{handleClose}{% endraw %}>
        <DialogTitle>
          Add New {{ table_name | replace('_', ' ') | title }}
        </DialogTitle>
        <DialogContent>
          <Grid container spacing={2}>
    {% endraw %}
            {% for field in all_fields %}
            {% if not field.primaryKey %}
    {% raw %}
            <Grid item xs={12} sm={6}>
              <TextField
                margin="normal"
                fullWidth
                id="
    {% endraw %}{{ field.name }}{% raw %}"
                label="
    {% endraw %}{{ field.name | replace('_', ' ') | title }}{% raw %}"
                name="
    {% endraw %}{% endraw %}{{ field.name }}{% raw %}"
                value={% raw %}{formData.
    {% endraw %}{{ field.name }}{% raw %}{% raw %} || ''}{% endraw %}
                onChange={% raw %}{handleInputChange}{% endraw %}
              />
            </Grid>
            {% endif %}
            {% endfor %}
    {% raw %}
          </Grid>
        </DialogContent>
        <DialogActions>
          <Button onClick={% raw %}{handleClose}{% endraw %}>Cancel</Button>
          <Button onClick={% raw %}{handleSubmit}{% endraw %}>Save</Button>
        </DialogActions>
      </Dialog>
    </Box>
    {% endraw %}
  );
};

export default {{ component_name }};
