{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MohammadJuned\\\\git\\\\repository\\\\rapid-code-generator-frontend\\\\rapid-frontend\\\\src\\\\components\\\\GenerateApp.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport api from \"../api/globalApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenerateApp() {\n  _s();\n  const [className, setClassName] = useState(\"\");\n  const [fields, setFields] = useState([{\n    name: \"\",\n    type: \"String\",\n    primary: false\n  }]);\n  const [responseMsg, setResponseMsg] = useState(\"\");\n  const handleFieldChange = (index, key, value) => {\n    const updatedFields = [...fields];\n    updatedFields[index][key] = value; // type assertion to satisfy TS\n    setFields(updatedFields);\n  };\n  const removeField = index => {\n    const updatedFields = fields.filter((_, i) => i !== index);\n    setFields(updatedFields);\n  };\n  const addField = () => {\n    setFields([...fields, {\n      name: \"\",\n      type: \"String\",\n      primary: false\n    }]);\n  };\n  const handleGenerate = async () => {\n    try {\n      const payload = {\n        className,\n        fields\n      };\n      const response = await api.post(\"/generateApp\", payload);\n      setResponseMsg(response.data.message);\n    } catch (err) {\n      console.error(\"Error generating app:\", err);\n      setResponseMsg(\"Error generating app\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate Spring Boot App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: className,\n      onChange: e => setClassName(e.target.value),\n      placeholder: \"Enter full class name\",\n      style: {\n        width: \"100%\",\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Fields\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"10px\",\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: field.name,\n        onChange: e => handleFieldChange(index, \"name\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `field-type-${index}`,\n        children: \"Field Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: `field-type-${index}`,\n        value: field.type,\n        onChange: e => handleFieldChange(index, \"type\", e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"String\",\n          children: \"String\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Long\",\n          children: \"Long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LocalDateTime\",\n          children: \"LocalDateTime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: field.primary,\n          onChange: e => handleFieldChange(index, \"primary\", e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), \"Primary\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeField(index),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addField,\n      children: \"Add Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerate,\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), responseMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: responseMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(GenerateApp, \"wMBehK/EWtqXdQgHj0Jr7MwbWDs=\");\n_c = GenerateApp;\nexport default GenerateApp;\nvar _c;\n$RefreshReg$(_c, \"GenerateApp\");","map":{"version":3,"names":["useState","api","jsxDEV","_jsxDEV","GenerateApp","_s","className","setClassName","fields","setFields","name","type","primary","responseMsg","setResponseMsg","handleFieldChange","index","key","value","updatedFields","removeField","filter","_","i","addField","handleGenerate","payload","response","post","data","message","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","placeholder","style","width","marginBottom","map","field","display","gap","htmlFor","id","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MohammadJuned/git/repository/rapid-code-generator-frontend/rapid-frontend/src/components/GenerateApp.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport api from \"../api/globalApi\";\r\n\r\ntype Field = {\r\n  name: string;\r\n  type: string;\r\n  primary: boolean;\r\n};\r\n\r\nfunction GenerateApp() {\r\n  const [className, setClassName] = useState(\"\");\r\n  const [fields, setFields] = useState<Field[]>([\r\n    { name: \"\", type: \"String\", primary: false },\r\n  ]);\r\n  const [responseMsg, setResponseMsg] = useState(\"\");\r\n\r\n  const handleFieldChange = (\r\n    index: number,\r\n    key: keyof Field,\r\n    value: string | boolean\r\n  ) => {\r\n    const updatedFields = [...fields];\r\n    updatedFields[index][key] = value as never; // type assertion to satisfy TS\r\n    setFields(updatedFields);\r\n  };\r\n\r\n  const removeField = (index: number) => {\r\n    const updatedFields = fields.filter((_, i) => i !== index);\r\n    setFields(updatedFields);\r\n  };\r\n\r\n  const addField = () => {\r\n    setFields([...fields, { name: \"\", type: \"String\", primary: false }]);\r\n  };\r\n\r\n  const handleGenerate = async () => {\r\n    try {\r\n      const payload = {\r\n        className,\r\n        fields,\r\n      };\r\n      const response = await api.post(\"/generateApp\", payload);\r\n      setResponseMsg(response.data.message);\r\n    } catch (err) {\r\n      console.error(\"Error generating app:\", err);\r\n      setResponseMsg(\"Error generating app\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Generate Spring Boot App</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={className}\r\n        onChange={(e) => setClassName(e.target.value)}\r\n        placeholder=\"Enter full class name\"\r\n        style={{ width: \"100%\", marginBottom: \"10px\" }}\r\n      />\r\n\r\n      <h3>Fields</h3>\r\n      {fields.map((field, index) => (\r\n        <div\r\n          key={index}\r\n          style={{ display: \"flex\", gap: \"10px\", marginBottom: \"10px\" }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            value={field.name}\r\n            onChange={(e) => handleFieldChange(index, \"name\", e.target.value)}\r\n          />\r\n          <label htmlFor={`field-type-${index}`}>Field Type</label>\r\n          <select\r\n            id={`field-type-${index}`}\r\n            value={field.type}\r\n            onChange={(e) => handleFieldChange(index, \"type\", e.target.value)}\r\n          >\r\n            <option value=\"String\">String</option>\r\n            <option value=\"Long\">Long</option>\r\n            <option value=\"LocalDateTime\">LocalDateTime</option>\r\n          </select>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={field.primary}\r\n              onChange={(e) =>\r\n                handleFieldChange(index, \"primary\", e.target.checked)\r\n              }\r\n            />\r\n            Primary\r\n          </label>\r\n          <button onClick={() => removeField(index)}>Remove</button>\r\n        </div>\r\n      ))}\r\n\r\n      <button onClick={addField}>Add Field</button>\r\n      <br />\r\n      <br />\r\n      <button onClick={handleGenerate}>Generate</button>\r\n\r\n      {responseMsg && <p>{responseMsg}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenerateApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}