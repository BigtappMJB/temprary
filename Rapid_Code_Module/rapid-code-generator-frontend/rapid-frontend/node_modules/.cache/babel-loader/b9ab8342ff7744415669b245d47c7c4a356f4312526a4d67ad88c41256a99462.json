{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MohammadJuned\\\\git\\\\repository\\\\rapid-code-generator-frontend\\\\rapid-frontend\\\\src\\\\components\\\\DownloadFile.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport api from \"../api/globalApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DownloadFile() {\n  _s();\n  const [fileName, setFileName] = useState(\"\");\n  const [responseMsg, setResponseMsg] = useState(\"\");\n  const handleDownload = async () => {\n    try {\n      const response = await api.get(`/download/${fileName}`, {\n        responseType: \"blob\"\n      });\n\n      // Check if the file is not found\n      if (response.status === 404 || response.data === \"File not found\") {\n        setResponseMsg(\"Error: File not found\");\n      } else {\n        // File found, start the download\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", fileName);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n\n        // Success message after download\n        setResponseMsg(\"File downloaded successfully!\");\n      }\n    } catch (err) {\n      // In case of other errors\n      console.error(\"Error downloading file:\", err);\n      setResponseMsg(\"Either the file name is incorrect or the file is unavailable. Please check the file name and try again. If the problem persists, contact the admin team for assistance.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Download Generated File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: fileName,\n      onChange: e => setFileName(e.target.value),\n      placeholder: \"Enter filename (e.g., app.jar)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      children: \"Download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), responseMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: responseMsg.includes(\"unavailable\") ? \"#f44336\" : \"#4CAF50\",\n        color: \"white\",\n        padding: \"10px\",\n        borderRadius: \"5px\",\n        marginTop: \"10px\",\n        fontWeight: \"bold\"\n      },\n      children: responseMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(DownloadFile, \"DIgO1RyFZp7dam3UWqw9omSamvk=\");\n_c = DownloadFile;\nexport default DownloadFile;\nvar _c;\n$RefreshReg$(_c, \"DownloadFile\");","map":{"version":3,"names":["useState","api","jsxDEV","_jsxDEV","DownloadFile","_s","fileName","setFileName","responseMsg","setResponseMsg","handleDownload","response","get","responseType","status","data","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","err","console","error","children","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","backgroundColor","includes","color","padding","borderRadius","marginTop","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/MohammadJuned/git/repository/rapid-code-generator-frontend/rapid-frontend/src/components/DownloadFile.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport api from \"../api/globalApi\";\r\n\r\nfunction DownloadFile() {\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [responseMsg, setResponseMsg] = useState(\"\");\r\n\r\n  const handleDownload = async () => {\r\n    try {\r\n      const response = await api.get(`/download/${fileName}`, {\r\n        responseType: \"blob\",\r\n      });\r\n\r\n      // Check if the file is not found\r\n      if (response.status === 404 || response.data === \"File not found\") {\r\n        setResponseMsg(\"Error: File not found\");\r\n      } else {\r\n        // File found, start the download\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\"download\", fileName);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        link.remove();\r\n\r\n        // Success message after download\r\n        setResponseMsg(\"File downloaded successfully!\");\r\n      }\r\n    } catch (err) {\r\n      // In case of other errors\r\n      console.error(\"Error downloading file:\", err);\r\n      setResponseMsg(\r\n        \"Either the file name is incorrect or the file is unavailable. Please check the file name and try again. If the problem persists, contact the admin team for assistance.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Download Generated File</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={fileName}\r\n        onChange={(e) => setFileName(e.target.value)}\r\n        placeholder=\"Enter filename (e.g., app.jar)\"\r\n      />\r\n      <button onClick={handleDownload}>Download</button>\r\n      {responseMsg && (\r\n        <div\r\n          style={{\r\n            backgroundColor: responseMsg.includes(\"unavailable\")\r\n              ? \"#f44336\"\r\n              : \"#4CAF50\",\r\n            color: \"white\",\r\n            padding: \"10px\",\r\n            borderRadius: \"5px\",\r\n            marginTop: \"10px\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {responseMsg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DownloadFile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}